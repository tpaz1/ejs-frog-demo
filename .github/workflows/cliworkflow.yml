name: Build and Publish with JFrog CLI

on:
  push:
    branches:
      - main

env:
  JF_URL: https://mycompany.jfrog.io/artifactory
  JF_USER: ${{ secrets.JF_USER }}
  JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
  JF_BUILD_NAME: ejs-frog-demo-build
  JF_BUILD_NUMBER: ${{ github.run_number }}
  JF_REPO_LOCAL: npm-local
  JF_REPO_REMOTE: npm-remote
  JF_REPO_VIRTUAL: npm

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Download and install JFrog CLI
        run: |
          curl -fL https://install-cli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin/

      - name: Configure JFrog CLI
        run: |
          jf c add my-server \
            --url="$JF_URL" \
            --user="$JF_USER" \
            --password="$JF_PASSWORD" \
            --interactive=false \
            --overwrite=true
        # Configures CLI with Artifactory credentials and base URL

      - name: Configure NPM for JFrog CLI
        run: jf npmc --server-id-resolve=my-server --repo-resolve=$JF_REPO_VIRTUAL
        # Updates .npmrc to resolve dependencies from Artifactory virtual repo

      - name: Install dependencies
        run: jf npm install --build-name=$JF_BUILD_NAME --build-number=$JF_BUILD_NUMBER
        # Wraps npm install with build-info collection

      - name: Collect environment variables
        run: jf rt bag $JF_BUILD_NAME $JF_BUILD_NUMBER
        # Captures env vars for traceability

      - name: Collect git info
        run: jf rt bce $JF_BUILD_NAME $JF_BUILD_NUMBER
        # Captures git metadata (e.g. commit, branch)

      - name: Publish package to Artifactory
        run: jf npm publish --build-name=$JF_BUILD_NAME --build-number=$JF_BUILD_NUMBER --repo=$JF_REPO_LOCAL
        # Publishes to the local repo while attaching build metadata

      - name: Publish build-info
        run: jf rt bp $JF_BUILD_NAME $JF_BUILD_NUMBER
        # Sends collected build info to Artifactory

      - name: Scan with Xray
        run: jf rt bs $JF_BUILD_NAME $JF_BUILD_NUMBER
        # Triggers Xray scan on the published build

      - name: Promote build to another repo (optional)
        run: |
          jf rt bpr $JF_BUILD_NAME $JF_BUILD_NUMBER $JF_REPO_REMOTE \
            --status=approved --comment="Promoted from GitHub Actions" --copy=true
        # Promotes the build (copy) to a remote or promoted repo
